version: "3.8"

services:
  app:
    build: .
    container_name: application
    command: npm run dev  
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/app
    networks:
      - app-network

  mysql:
    image: mysql
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - app-mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network  
   
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: password
    depends_on:
      - mysql  
    ports:
      - "8080:80"
    networks:
      - app-network 

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: "password"
    ports:
      - "15432:5432"
    volumes:
      - app-postgres:/var/lib/postgresql/data 
    networks:
      - app-network      
  
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "postgres"
      PGADMIN_DEFAULT_PASSWORD: "password"
    ports:
      - "16543:80"
    depends_on:
      - postgres
    networks:
      - app-network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: user
      ME_CONFIG_BASICAUTH_PASSWORD: password
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
    links:
      - mongo
    networks:
      - app-network

  mongo:
    image: mongo
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - app-mongo:/data/db
    networks:
      - app-network

volumes:
  app-postgres:    
  app-mysql:
  app-mongo:        

networks: 
  app-network:
      driver: bridge      

    
